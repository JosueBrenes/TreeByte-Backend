# CodeRabbit Configuration for TreeByte-Backend Project
# This file configures how CodeRabbit analyzes and reviews your code

# Global settings
global:
  # Enable/disable CodeRabbit for this repository
  enabled: true
  
  # Set the default language for reviews
  language: "en"
  
  # Configure review behavior
  review:
    # Enable automatic reviews on pull requests
    auto_review: true
    
    # Enable inline comments
    inline_comments: true
    
    # Enable summary comments
    summary_comments: true
    
    # Set review depth to deep for comprehensive analysis
    depth: "deep"
    
    # Enable issue compliance checking
    issue_compliance: true
    
    # Enable architecture validation
    architecture_validation: true

# File patterns to include/exclude
files:
  # Include patterns
  include:
    - "src/**/*.{ts,tsx,js,jsx}"
    - "contracts/**/*.rs"
    - "supabase/**/*.sql"
    - "*.{json,md,yaml,yml}"
    - "*.{toml}"
    - "package.json"
    - "tsconfig.json"
  
  # Exclude patterns
  exclude:
    - "node_modules/**"
    - "dist/**"
    - "build/**"
    - "target/**"
    - "coverage/**"
    - "*.min.js"
    - "*.bundle.js"
    - "package-lock.json"
    - "yarn.lock"
    - "pnpm-lock.yaml"
    - ".git/**"
    - "*.log"
    - "*.lock"
    - "Cargo.lock"
    - "test_snapshots/**"

# Language-specific configurations
languages:
  typescript:
    # TypeScript/JavaScript specific settings
    enabled: true
    # Include type checking in reviews
    type_check: true
    # Check for common TypeScript issues
    lint_checks: true
    # Check for Express.js specific patterns
    express_patterns: true
    # Check for proper imports
    import_validation: true
    
  rust:
    # Rust specific settings for smart contracts
    enabled: true
    # Check for common Rust issues
    lint_checks: true
    # Include cargo check in reviews
    cargo_check: true
    # Security analysis for smart contracts
    security_analysis: true
    # Soroban-specific patterns
    soroban_patterns: true
    
  sql:
    # SQL specific settings
    enabled: true
    # Check for SQL best practices
    best_practices: true
    # Check for Supabase-specific patterns
    supabase_patterns: true

# Security settings
security:
  # Enable security scanning
  enabled: true
  
  # Check for common vulnerabilities
  vulnerability_scan: true
  
  # Check for secrets in code
  secret_scan: true
  
  # Check for dependency vulnerabilities
  dependency_scan: true
  
  # Blockchain-specific security
  blockchain_security: true
  stellar_security: true

# Performance settings
performance:
  # Enable performance analysis
  enabled: true
  
  # Check for performance issues
  performance_scan: true
  
  # Check for memory leaks
  memory_leak_scan: true
  
  # Database performance
  database_performance: true

# Code quality settings
quality:
  # Enable code quality checks
  enabled: true
  
  # Check for code smells
  code_smells: true
  
  # Check for maintainability issues
  maintainability: true
  
  # Check for readability issues
  readability: true
  
  # Check for complexity issues
  complexity: true

# Custom rules and preferences
rules:
  # Enforce consistent naming conventions
  naming_conventions: true
  # Kebab-case for files, PascalCase for classes, camelCase for variables
  file_naming: "kebab-case"
  class_naming: "PascalCase"
  variable_naming: "camelCase"
  constant_naming: "UPPER_SNAKE_CASE"
  
  # Check for proper error handling
  error_handling: true
  
  # Check for proper documentation (disabled as per requirements)
  documentation: false
  
  # Check for test coverage
  test_coverage: true
  
  # Check for accessibility issues
  accessibility: true
  
  # Architecture validation
  single_responsibility: true
  service_size_limit: 200  # Maximum lines per service
  controller_orchestration: true   # Controllers should orchestrate, not implement complex logic
  
  # Import validation
  absolute_imports: true     # Prefer absolute paths over relative paths
  import_grouping: true      # Group imports: libraries ‚Üí internals ‚Üí relatives
  
  # Code quality
  duplicate_code_detection: true
  cyclomatic_complexity: true
  function_length_limit: 50  # Maximum lines per function
  
  # Issue compliance
  issue_requirement_check: true
  change_traceability: true
  
  # Blockchain-specific rules
  stellar_integration: true
  smart_contract_security: true
  ipfs_integration: true

# Project-specific settings
project:
  # Project type
  type: "backend"
  
  # Framework detection
  frameworks:
    - "express"
    - "typescript"
    - "rust"
    - "stellar"
    - "supabase"
  
  # Database type
  database: "supabase"
  
  # Blockchain integration
  blockchain: "stellar"
  
  # Smart contracts
  smart_contracts: true
  
  # IPFS integration
  ipfs: true

# Review templates
templates:
  # Custom review messages
  messages:
    security: "üîí Security review completed"
    performance: "‚ö° Performance review completed"
    quality: "‚ú® Code quality review completed"
    accessibility: "‚ôø Accessibility review completed"
    architecture: "üèóÔ∏è Architecture validation completed"
    issue_compliance: "‚úÖ Issue compliance check completed"
    naming: "üìù Naming conventions check completed"
    imports: "üì¶ Import structure validation completed"
    blockchain: "‚õìÔ∏è Blockchain integration review completed"
    smart_contracts: "üîê Smart contract security review completed"
  
  # Priority-based review messages
  priorities:
    high: "üö® HIGH PRIORITY ISSUE"
    medium: "‚ö†Ô∏è MEDIUM PRIORITY ISSUE"
    low: "‚ÑπÔ∏è LOW PRIORITY ISSUE"
  
  # Architecture-specific messages
  architecture:
    single_responsibility: "üîß Service has multiple responsibilities - consider splitting"
    large_service: "üìè Service exceeds size limit - consider refactoring"
    controller_logic: "üé≠ Controller contains complex logic - move to services"
    relative_imports: "üîÑ Use absolute imports instead of relative paths"
    stellar_integration: "‚≠ê Stellar blockchain integration patterns validated"
    smart_contract_security: "üîê Smart contract security patterns validated" 